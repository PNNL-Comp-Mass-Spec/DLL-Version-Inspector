<?xml version="1.0"?>
<doc>
<assembly>
<name>
DLLVersionInspector
</name>
</assembly>
<members>
<member name="T:DLLVersionInspector.clsDLLVersionInspector">
 <summary>
  This class will determine the version of a .NET DLL or a generic Windows DLL
  Written by Matthew Monroe for the Department of Energy (PNNL, Richland, WA)
  Started June 14, 2013
 </summary>
</member>
<member name="M:DLLVersionInspector.clsDLLVersionInspector.DetermineVersionDotNETDll(System.String,System.String)">
 <summary>
 Determines the version of a .NET DLL
 </summary>
 <param name="dllFilePath"></param>
 <param name="outputDirectoryPath"></param>
 <returns>True if success, false if an error</returns>
 <remarks></remarks>
</member>
<member name="M:DLLVersionInspector.clsDLLVersionInspector.DetermineVersionGenericDLL(System.String,System.String)">
 <summary>
 Determines the version of a generic Windows DLL
 </summary>
 <param name="dllFilePath"></param>
 <param name="outputDirectoryPath"></param>
 <returns>True if success, false if an error</returns>
 <remarks></remarks>
</member>
<member name="M:DLLVersionInspector.clsDLLVersionInspector.ProcessFile(System.String,System.String,System.String,System.Boolean)">
 <summary>
 Main processing function -- Calls DetermineVersionGenericDLL or DetermineVersionDotNETDll
 </summary>
 <param name="inputFilePath"></param>
 <param name="outputDirectoryPath"></param>
 <param name="parameterFilePath"></param>
 <param name="resetErrorCode"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:DLLVersionInspector.modMain.Main">
 <summary>
 Main method
 </summary>
 <returns>0 if no error, error code if an error</returns>
</member>
</members>
</doc>
